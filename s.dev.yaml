extend: s.yaml

vars:
  region: "cn-hongkong"
  service:
    name: "maplegrove-api"
    description: 'project by Serverless Devs'
    role: 'acs:ram::${config(AccountID)}:role/AliyunFcDefaultRole'
    nasConfig: auto
    logConfig: auto
  functionName: "strapi"
  environmentVariables: #  为函数配置环境变量
    App_Version: "0.0.1"
    TZ: "Asia/Shanghai"
    ADMIN_JWT_SECRET: ${env(ADMIN_JWT_SECRET)}
    API_TOKEN_SALT: ${env(API_TOKEN_SALT)}
    APP_KEYS: ${env(APP_KEYS)}
    TRANSFER_TOKEN_SALT: ${env(TRANSFER_TOKEN_SALT)}
    JWT_SECRET: ${env(JWT_SECRET)}
    DATABASE_CLIENT: ${env(DATABASE_CLIENT)}
    DATABASE_FILENAME: ${env(DATABASE_FILENAME)}
  image: ${env(imageurl)}

services:
  project-function: #  服务名称
    component: fc # 组件名称，
    actions: # 自定义执行逻辑，关于actions 的使用，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#行为描述
      pre-deploy: # 在deploy之前运行
        - component: fc build --use-docker --dockerfile ./code/project/Dockerfile.dev --context ./code/project/strapi-api
           # - run: docker build xxx            # 要执行的系统命令，类似于一种钩子的形式
           #   path: ./src                      # 执行系统命令/钩子的路径
    props: #  组件的属性值
      region: ${vars.region} # 关于变量的使用方法，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#变量赋值
      service: ${vars.service}
      function:
        name: "${vars.functionName}_inherit_kaniko" # 函数名
        description: 'project  Function'
        timeout: 60
        memorySize: 256
        cpu: 0.2
        diskSize: 512
        instanceConcurrency: 12
        caPort: 1337
        runtime: custom-container
        codeUri: ./
        customContainerConfig:
          image: ${vars.image}
      triggers:
        - name: httpTrigger
          type: http
          config:
            authType: anonymous
            methods:
              - GET
              - POST
              - PUT
              - DELETE
              - HEAD
              - OPTIONS
      customDomains:
        - domainName: auto
          protocol: HTTP
          routeConfigs:
            - path: /*
              methods:
                - GET
                - POST
                - PUT
                - DELETE
                - HEAD
                - OPTIONS
# END